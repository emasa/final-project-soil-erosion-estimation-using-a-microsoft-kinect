
#include <algorithm>

#include "gtest/gtest.h"

#include "features/descriptor_types.h"
#include "features/descriptor_representations.h"

TEST(BinaryPointRepresentationTest, ORBSignature32Test)
{
	unsigned char value = 100;
	auto init = std::vector<unsigned char>(32, value); 
	
	ORBSignature32 d;
	std::copy(init.begin(), init.end(), std::begin(d.descriptor));

	pcl::ORBSignature32Representation rep;
	
	auto expected = std::vector<unsigned char>(32, 0);
	rep.copyToBinaryArray(d, expected.data());
	EXPECT_EQ(init, expected);

	expected = std::vector<unsigned char>(32, 0);
	rep.vectorize(d, expected);
	EXPECT_EQ(init, expected);	
}

// autogenerated main linking with gtest_main